From 4d497a1304915c48f76dff9ec814dc96956d3f69 Mon Sep 17 00:00:00 2001
From: Matthias Reichl <hias@horus.com>
Date: Sun, 10 Jan 2021 15:37:29 +0100
Subject: [PATCH 1/2] ASoC: dmaengine: set max_buffer_size only if pcm_hardware
 is set

This allows changing prealloc_buffer_size without having to also
set pcm_hardware.

Signed-off-by: Matthias Reichl <hias@horus.com>
---
 sound/soc/soc-generic-dmaengine-pcm.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/sound/soc/soc-generic-dmaengine-pcm.c b/sound/soc/soc-generic-dmaengine-pcm.c
index 9ef80a48707eb..9e8fc47f0bf39 100644
--- a/sound/soc/soc-generic-dmaengine-pcm.c
+++ b/sound/soc/soc-generic-dmaengine-pcm.c
@@ -232,15 +232,15 @@ static int dmaengine_pcm_new(struct snd_soc_component *component,
 	struct device *dev = component->dev;
 	struct snd_pcm_substream *substream;
 	size_t prealloc_buffer_size;
-	size_t max_buffer_size;
+	size_t max_buffer_size = SIZE_MAX;
 	unsigned int i;
 
 	if (config && config->prealloc_buffer_size) {
 		prealloc_buffer_size = config->prealloc_buffer_size;
-		max_buffer_size = config->pcm_hardware->buffer_bytes_max;
+		if (config->pcm_hardware)
+			max_buffer_size = config->pcm_hardware->buffer_bytes_max;
 	} else {
 		prealloc_buffer_size = 512 * 1024;
-		max_buffer_size = SIZE_MAX;
 	}
 
 	for_each_pcm_streams(i) {
-- 
2.20.1


From 8525e0ea2363ff862cfee222646f90d277edbd76 Mon Sep 17 00:00:00 2001
From: Matthias Reichl <hias@horus.com>
Date: Wed, 20 Jan 2021 13:10:21 +0100
Subject: [PATCH 2/2] drm/vc4: hdmi: use 1280k audio buffer on bcm2711

The current default of 512k results in occasional buffer underruns
when playing video with 192kHz 8-channel audio in Kodi. Increase
the buffer size so Kodi can get the 200ms buffer it usually wants.

Signed-off-by: Matthias Reichl <hias@horus.com>
---
 drivers/gpu/drm/vc4/vc4_hdmi.c | 13 +++++++++++--
 drivers/gpu/drm/vc4/vc4_hdmi.h |  3 +++
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/vc4/vc4_hdmi.c b/drivers/gpu/drm/vc4/vc4_hdmi.c
index 2386c7303a215..e093e004b4325 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi.c
+++ b/drivers/gpu/drm/vc4/vc4_hdmi.c
@@ -1876,11 +1876,17 @@ static struct snd_soc_dai_driver vc4_hdmi_audio_cpu_dai_drv = {
 	.ops = &vc4_hdmi_audio_dai_ops,
 };
 
-static const struct snd_dmaengine_pcm_config pcm_conf = {
+static const struct snd_dmaengine_pcm_config bcm2835_pcm_config = {
 	.chan_names[SNDRV_PCM_STREAM_PLAYBACK] = "audio-rx",
 	.prepare_slave_config = snd_dmaengine_pcm_prepare_slave_config,
 };
 
+static const struct snd_dmaengine_pcm_config bcm2711_pcm_config = {
+	.chan_names[SNDRV_PCM_STREAM_PLAYBACK] = "audio-rx",
+	.prepare_slave_config = snd_dmaengine_pcm_prepare_slave_config,
+	.prealloc_buffer_size = 1280 * 1024,
+};
+
 static int vc4_hdmi_audio_init(struct vc4_hdmi *vc4_hdmi)
 {
 	const struct vc4_hdmi_register *mai_data =
@@ -1928,7 +1934,7 @@ static int vc4_hdmi_audio_init(struct vc4_hdmi *vc4_hdmi)
 		IEC958_AES1_CON_ORIGINAL | IEC958_AES1_CON_PCM_CODER;
 	vc4_hdmi->audio.iec_status[3] = IEC958_AES3_CON_FS_48000;
 
-	ret = devm_snd_dmaengine_pcm_register(dev, &pcm_conf, 0);
+	ret = devm_snd_dmaengine_pcm_register(dev, vc4_hdmi->variant->pcm_config, 0);
 	if (ret) {
 		dev_err(dev, "Could not register PCM component: %d\n", ret);
 		return ret;
@@ -2591,6 +2597,7 @@ static const struct vc4_hdmi_variant bcm2835_variant = {
 	.encoder_type		= VC4_ENCODER_TYPE_HDMI0,
 	.debugfs_name		= "hdmi_regs",
 	.card_name		= "vc4-hdmi",
+	.pcm_config		= &bcm2835_pcm_config,
 	.max_pixel_clock	= 162000000,
 	.cec_input_clock	= VC4_HSM_CLOCK,
 	.registers		= vc4_hdmi_fields,
@@ -2614,6 +2621,7 @@ static const struct vc4_hdmi_variant bcm2711_hdmi0_variant = {
 	.encoder_type		= VC4_ENCODER_TYPE_HDMI0,
 	.debugfs_name		= "hdmi0_regs",
 	.card_name		= "vc4-hdmi-0",
+	.pcm_config		= &bcm2711_pcm_config,
 	.max_pixel_clock	= HDMI_14_MAX_TMDS_CLK,
 	.cec_input_clock	= 27000000,
 	.registers		= vc5_hdmi_hdmi0_fields,
@@ -2644,6 +2652,7 @@ static const struct vc4_hdmi_variant bcm2711_hdmi1_variant = {
 	.encoder_type		= VC4_ENCODER_TYPE_HDMI1,
 	.debugfs_name		= "hdmi1_regs",
 	.card_name		= "vc4-hdmi-1",
+	.pcm_config		= &bcm2711_pcm_config,
 	.max_pixel_clock	= HDMI_14_MAX_TMDS_CLK,
 	.cec_input_clock	= 27000000,
 	.registers		= vc5_hdmi_hdmi1_fields,
diff --git a/drivers/gpu/drm/vc4/vc4_hdmi.h b/drivers/gpu/drm/vc4/vc4_hdmi.h
index 8682d8bbf8391..b5ed7c09342ba 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi.h
+++ b/drivers/gpu/drm/vc4/vc4_hdmi.h
@@ -39,6 +39,9 @@ struct vc4_hdmi_variant {
 	/* ALSA card name */
 	const char *card_name;
 
+	/* ALSA dmaengine PCM config */
+	const struct snd_dmaengine_pcm_config *pcm_config;
+
 	/* Filename to expose the registers in debugfs */
 	const char *debugfs_name;
 
-- 
2.20.1

